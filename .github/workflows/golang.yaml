## Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

name: Go

on:
  workflow_call: {}
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - release-*

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      GOLANG_VERSION: ${{ steps.go_version.outputs.GOLANG_VERSION }}
    steps:
    - uses: actions/checkout@v5
      name: Checkout code

    - name: Get Golang version
      id: go_version
      run: |
        GOLANG_VERSION=$(./hack/golang-version.sh)
        echo "GOLANG_VERSION=${GOLANG_VERSION##GOLANG_VERSION := }" >> $GITHUB_OUTPUT

  check:
    runs-on: ubuntu-latest
    needs: variables
    steps:
    - uses: actions/checkout@v5
      name: Checkout code

    - name: Install Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.variables.outputs.GOLANG_VERSION }}

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: -v --timeout 5m
        skip-cache: true

    - name: Check golang modules
      run: |
        make check-modules

  test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: variables
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.variables.outputs.GOLANG_VERSION }}

    - name: Run unit tests and generate coverage report
      run: make coverage

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: coverage.out

  build:
    name: Build
    needs: variables
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ needs.variables.outputs.GOLANG_VERSION }}

      - run: make build-cli
